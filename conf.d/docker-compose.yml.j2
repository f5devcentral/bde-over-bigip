version: "3"

services:
  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: ELASTICSEARCH
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
    volumes:
      - ${HOMEDIR}/deps/conf.d/elasticsearch/jvm.options.d:/usr/share/elasticsearch/config/jvm.options.d
      - ${HOMEDIR}/deps/conf.d/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ${HOMEDIR}/data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - ta-net

  kibana:
    image: kibana:7.14.2
    container_name: KIBANA
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    volumes:
      - ${HOMEDIR}/deps/conf.d/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ${HOMEDIR}/data/kibana:/usr/share/kibana/data
    networks:
      - ta-net

  logstash:
    image: logstash:7.14.2
    container_name: LOGSTASH
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    ports:
      - 9600:9600
      - 20004:20004
    volumes:
      - ${HOMEDIR}/deps/conf.d/logstash/index-templates:/usr/share/logstash/index-templates
      - ${HOMEDIR}/deps/conf.d/logstash/index-lifecycle:/usr/share/logstash/index-lifecycle
      - ${HOMEDIR}/deps/conf.d/logstash/logstash.pipelines:/usr/share/logstash/config/pipelines.yml
      - ${HOMEDIR}/deps/conf.d/logstash/pipelines:/usr/share/logstash/config/pipelines
      - ${HOMEDIR}/scripts/cmds-in-logstash:/usr/share/logstash/cmds-in-logstash
    entrypoint:
      - bash
      - -c
      - "/usr/share/logstash/cmds-in-logstash/create-index-lifecycle.sh && /usr/local/bin/docker-entrypoint -r"
    networks:
      - ta-net

  {% if mode == "full" -%}
  fluentd:
    build: ${HOMEDIR}/docker/fluentd
    image: f5networks/fluentd:latest
    container_name: FLUENTD
    ports:
      - "20000-20010:20000-20010"
      - 20002:20002/udp
    volumes:
      - ${HOMEDIR}/deps/conf.d/fluentd.conf:/etc/td-agent/td-agent.conf
      - ${HOMEDIR}/deps/conf.d/fluentd:/etc/td-agent/fluentd
      - ${HOMEDIR}/logs/fluentd/td-agent:/var/log/td-agent
      - ${HOMEDIR}/data/fluentd:/var/log/buffer
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
      - kafka
      - logstash
    networks:
      - ta-net

  ctrlbox:
    build: ${HOMEDIR}/docker/ctrlbox
    image: f5networks/ctrlbox:latest
    container_name: CTRLBOX
    ports:
      - 8000:80
      - 7890:7890
    links:
      - elasticsearch
    depends_on:
      - nginx
      - kibana
      - elasticsearch
      - fluentd
      - kafka
      - logstash
    volumes:
      - ${HOMEDIR}:/root/workdir
    networks:
      - ta-net

  zookeeper:
    image: bitnami/zookeeper:3
    container_name: ZOOKEEPER
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - ta-net
    
  kafka:
    image: bitnami/kafka:2
    container_name: KAFKA
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - ${HOMEDIR}/data/kafka:/bitnami/kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      # fix error of fluentd: error_class=Kafka::MessageSizeTooLarge error="Kafka::MessageSizeTooLarge"
      - KAFKA_CFG_MESSAGE_MAX_BYTES=536870912 # 512M
      # data retention settings
      - KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS=10000 # 10s
      - KAFKA_CFG_LOG_RETENTION_HOURS=1 # 1hour
      - KAFKA_CFG_LOG_RETENTION_BYTES=1073741824  #1GB
    depends_on:
      - zookeeper
    networks:
      - ta-net
          
  nginx:
    image: nginx:latest
    container_name: NGINX
    ports:
      - 20000:20000/udp
      - 80:80
    volumes:
      - ${HOMEDIR}/deps/conf.d/nginx.conf:/etc/nginx/nginx.conf
      - ${HOMEDIR}/deps/conf.d/nginx-dashboards:/etc/nginx/dashboards
      - ${HOMEDIR}/logs/nginx:/var/log/nginx
    depends_on:
      - fluentd
    networks:
      - ta-net

  {%- endif %}

networks:
  ta-net:
    ipam:
      driver: default
      config:
        - subnet: {{ ipam_subnet_range }}
